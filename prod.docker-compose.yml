services:
  fastapi:
    container_name: <project_name>-api
    build:
      context: .
      dockerfile: prod.Dockerfile
    entrypoint: /opt/pysetup/app/entrypoint.sh
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.http.services.app.loadbalancer.server.port=80
      - traefik.http.routers.app-http.entrypoints=http
      - traefik.http.routers.app-http.rule=Host(`${BACKEND_HOST_NAME}`)
      - traefik.docker.network=<project_name>-network
      - traefik.http.routers.app-https.entrypoints=https
      - traefik.http.routers.app-https.rule=Host(`${BACKEND_HOST_NAME}`)
      - traefik.http.routers.app-https.tls=true
      - traefik.http.routers.app-https.tls.certresolver=le
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      - traefik.http.routers.app-http.middlewares=https-redirect
    volumes:
      - ./app:/opt/pysetup/app
      - .env:/opt/pysetup/app/.env
    expose:
      - 80
    depends_on:
      - postgres
      - redis
    networks:
      - <project_name>-network
    stop_grace_period: 3s

  postgres:
    image: postgres:17.4
    container_name: <project_name>-db
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - <project_name>-network

  traefik:
    image: traefik:v3.3.5
    container_name: <project_name>-proxy
    command:
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --certificatesresolvers.le.acme.email=$ACME_EMAIL
      - --certificatesresolvers.le.acme.storage=/certificates/acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - proxy-data:/certificates
    ports:
      - "80:80"
      - "443:443"
    restart: always
    networks:
      - <project_name>-network

  redis:
    image: redis:7.4.2
    container_name: <project_name>-cache
    env_file:
      - .env
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - <project_name>-network

volumes:
  postgres_data:
  redis_data:
  traefik-data:

networks:
  <project_name>-network:
    external: true
